name: CI
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: [self-hosted, nixos, hetzner]
    steps:
      - uses: actions/checkout@v4
      
      # No need to install Nix - our Hetzner server already has it!
      
      - name: Build server
        run: nix build .#server
      
      - name: Test server starts
        run: |
          # Use a different port for testing since 9000 is used by deployed service
          PORT=9001 nix run .#server &
          SERVER_PID=$!
          sleep 2
          curl -f http://localhost:9001 || (kill $SERVER_PID; exit 1)
          kill $SERVER_PID

      - name: Auto-merge PR
        if: github.event_name == 'pull_request'
        env:
          # IMPORTANT: Must use INFRA_TOKEN (PAT) instead of GITHUB_TOKEN
          # because GitHub Actions using GITHUB_TOKEN cannot trigger other workflows.
          # We need the merge to trigger push CI on main branch to create configs PR.
          GH_TOKEN: ${{ secrets.INFRA_TOKEN }}
        run: |
          echo "Auto-merging PR #${{ github.event.pull_request.number }}"
          gh pr merge ${{ github.event.pull_request.number }} \
            --repo ${{ github.repository }} \
            --squash \
            --delete-branch

      # gh CLI is already installed on our self-hosted runner
      
      - name: Create PR in configs repo
        if: github.event_name == 'push'
        env:
          GH_TOKEN: ${{ secrets.INFRA_TOKEN }}
        run: |
          sha="${GITHUB_SHA}"
          echo "Creating PR in configs repo to update hello-http to SHA: $sha"
          
          # Clone or pull configs repo
          if [ -d "/tmp/configs/.git" ]; then
            echo "Configs repo exists, pulling latest..."
            cd /tmp/configs
            git fetch origin
            git checkout master
            git reset --hard origin/master
          else
            echo "Cloning configs repo..."
            git clone "https://x-access-token:${GH_TOKEN}@github.com/justinmoon/configs.git" /tmp/configs
            cd /tmp/configs
          fi
          
          # Configure git
          git config user.name 'hello-http-bot'
          git config user.email 'bot@users.noreply.github.com'
          
          # Create branch for the update
          branch="bump-hello-http-${sha:0:7}"
          git checkout -b "$branch"
          
          # Update flake.lock
          nix flake lock \
            --override-input hello-http "github:justinmoon/hello-http/${sha}" \
            --update-input hello-http
          
          # Commit and push
          git add flake.lock
          git commit -m "bump: hello-http to ${sha:0:7}" || exit 0  # Exit if no changes
          
          # Push using GitHub token
          git remote set-url origin "https://x-access-token:${GH_TOKEN}@github.com/justinmoon/configs.git"
          git push origin "$branch"
          
          # Create PR using gh CLI
          cat > /tmp/pr-body.md << EOF
          Automated PR to update hello-http to commit ${sha}
          
          This PR was automatically created by the hello-http CI workflow.
          
          Changes:
          - Updated flake.lock to use hello-http@${sha}
          
          After merging, the GitOps deployment will automatically apply this update.
          EOF
          
          gh pr create \
            --repo justinmoon/configs \
            --base master \
            --head "$branch" \
            --title "Bump hello-http to ${sha:0:7}" \
            --body-file /tmp/pr-body.md